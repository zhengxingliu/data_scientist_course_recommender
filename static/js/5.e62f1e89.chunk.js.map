{"version":3,"sources":["requests/index.js","views/Dashboard/settings.js","views/Dashboard/index.js"],"names":["request","axios","create","baseURL","headers","interceptors","response","use","resp","parseInt","status","data","message","error","gridSpan","xs","lg","chartOption","dataset","source","grid","left","right","top","bottom","containLabel","xAxis","type","yAxis","tooltip","trigger","axisPointer","series","encode","x","y","itemStyle","color","echarts","graphic","LinearGradient","offset","emphasis","skills","Search","Dashboard","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","setState","getIndeedTableColumns","title","key","href","link","ellipsis","rows","expandable","showTitle","description","placement","split","map","item","Math","random","getIndeedData","isLoading","post","then","res","updater","isMounted","JSON","parse","filterData","searchword","countSkills","indeedData","indeedColumns","drawSkillChart","catch","err","console","log","finally","onSearch","keyword","word","filter","counts","forEach","Object","entries","i","length","sortedCount","push","sort","a","b","skillCount","chartData","slice","unshift","ChartOption","chart","setOption","getCourseraData","courses","matchSkills","courseraData","courseraColumns","getCourseraTableColumns","src","photo","topSkills","result","skill","course","name","reviews","matchedSkill","reverse","columns","this","init","document","getElementById","gutter","className","bordered","allowClear","enterButton","loading","dataSource","pagination","pageSize","onPageChange","hideOnSinglePage","showQuickJumper","showSizeChanger","id","height","margin","marginTop","Component"],"mappings":"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","file":"static/js/5.e62f1e89.chunk.js","sourcesContent":["import axios from 'axios'\nimport { message } from 'antd'\n\n// const isDev = process.env.NODE_ENV === 'development'\nconst isDev = false\n\nconst request = axios.create({\n  baseURL: isDev? 'http://localhost:8080' : 'https://ds-course-recommender.herokuapp.com',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\nrequest.interceptors.response.use((resp) => {\n  if (parseInt(resp.status) === 200) {\n    return resp.data\n  } else {\n    // handle error globally \n    // message.error(resp.data.errMsg);\n    message.error('An error occurred.')\n  }\n})\n\nexport const getIndeedJobs = () => {\n  return request.post('/fetch-indeed')\n}\n\nexport const getCourseraCourses = () => {\n  return request.post('/fetch-coursera')\n}\n\n\n","import echarts from 'echarts'\n\nexport const gridSpan = {\n  xs: 24,\n  lg: 12,\n}\n\nexport const chartOption = {\n  dataset: {\n      source: [\n      ]\n  },\n  grid: {\n    left: '3%',\n    right: '3%',\n    top: '0%',\n    bottom: '0%',\n    containLabel: true\n},\n  xAxis: {type: 'value'},\n  yAxis: {type: 'category'},\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n        type: 'shadow'}\n  },\n  \n  series: [\n      {\n          type: 'bar',\n          encode: {\n              x: 'count',\n              y: 'skill'\n          },\n          itemStyle: {\n              color: new echarts.graphic.LinearGradient(\n                  0, 1, 1, 1,\n                  [\n                    {offset: 0, color: '#B3E5FC'},\n                    {offset: 1, color: '#82B1FF'}\n                  ]\n              )\n          },\n          emphasis: {\n              itemStyle: {\n                  color: new echarts.graphic.LinearGradient(\n                      0, 0, 1, 1,\n                      [\n                          {offset: 0, color: '#2378f7'},\n                          {offset: 0.7, color: '#2378f7'},\n                          {offset: 1, color: '#83bff6'}\n                      ]\n                  )\n              }\n          },\n      }\n  ]\n};\n\n\n\nexport const skills = {\n  'Python': ['python', 'programming', 'scripting'],\n  'R': [' R ' ], \n  'Java': ['Java', 'JVM'],\n  'Scala': ['Scala'],\n  'C/C++': ['C++'],  \n  'MATLAB': ['MATLAB'],\n  'Excel': ['Excel'],\n  'SAS': ['SAS'],\n  'SQL': ['SQL'],\n  // 'databases': ['databases', 'database'],\n  'Oracle':['Oracle'],\n  'SPSS': ['SPSS'],\n  'Machine Learning': ['Machine Learning', 'ML', 'Deep Learning','Deep Learning'],\n  'Data Mining': ['Data Mining'],\n  'NLP': ['Natural Language Processing', 'NLP'],\n  'Data Visualization': ['Visualization'],\n  'Tableau': ['Tableau'], \n  'Power BI': ['Power BI'],\n  'Big Data': ['Big Data', 'Spark', 'kafka', 'Hive',\n                'beam', 'Hadoop', 'MapReduce', 'Hbase',\n                'Coudera', 'Hortonworks', 'ETL'],\n  'cloud': ['cloud', 'AWS', 'GCP', 'Azure'],\n  'AWS': ['AWS', 'Amazon Web Services'],\n  'Azure': ['Azure'],\n  'Google Cloud': ['Google Cloud', 'GCP'],\n  'Probability': ['probablity'],\n  'regression': ['regression'],\n  'clustering': ['clustering'],\n  'Sklearn': ['Sklearn', 'ScikitLearn', 'Scikit-Learn'],\n  'numpy': ['numpy'],\n  'pandas': ['pandas'],\n  'Neural Networks': ['Neural Networks', 'Deep Learning', ],\n  'Tensorflow': 'Tensorflow',\n  'Pytorch': 'Pytorch',\n  'Computer Vision': ['computer vision'],\n  'Hadoop': ['Hadoop'],\n  'Spark': ['Spark'],\n  'ETL': ['ETL'],\n  'Statistics' :  ['Statistics', 'statistical'],\n  'DevOps': ['DevOps'],\n  'Git':['GitHub', 'Git', 'version control', 'CI/CD'],\n  'agile' : ['agile'],\n  'SDLC' : ['SDLC', 'sdlc', ]\n}\n\n\nexport const categories = {\n  'Programming Languages': ['Python', 'R', 'Java', 'C/C++', 'MATLAB', 'Scala'],\n  'Databases': ['SQL/databases', 'Oracle'],\n  'Machine Learning': ['Machine Learning', 'NLP', 'regression', 'clustering', 'Sklearn', 'numpy', 'pandas'],\n  'Deep Learning': ['Tensorflow', 'Pytorch', 'Keras', 'Computer Vision'],\n  'Big Data': ['Big Data'],\n  'Data Analytics & Visualization': ['Data Visualization', 'Tableau', 'Power BI', 'Data Mining/Analytics', 'Excel'],\n  'Cloud': ['cloud', 'AWS', 'Azure', 'Google Cloud'],\n  'Others': ['Algebra', 'Mathematics','Statistics', 'DevOps', 'QA', 'version control', 'agile', 'SDLC','SAS', 'SPSS', 'Probability']\n}\n\n","import React, { Component } from 'react'\nimport { Card, Button, Table, Row, Col, Input, Space, Tooltip } from 'antd'\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport echarts from 'echarts'\n\nimport './index.css';\nimport { getIndeedJobs, getCourseraCourses } from '../../requests'\nimport {chartOption, gridSpan, skills} from './settings'\n\nconst { Search } = Input\n\nexport default class Dashboard extends Component {\n  constructor() {\n    super()\n    this.state = {\n      data: [],\n      columns: [],\n      isLoading: false,\n      searchword: '',\n      searchText: '',\n      searchedColumn: '',\n\n    }\n  }\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  getIndeedTableColumns = () => {\n    return [\n      {\n        title: 'Title',\n        dataIndex: 'title',\n        key: 'title',\n        width: '20%',\n        ...this.getColumnSearchProps('title'),\n\n        render: (text, record) => (\n          <a href={record.link}>{text}</a>\n        )\n      },\n      {\n        title: 'Company',\n        dataIndex: 'company',\n        key: 'company',\n        width: '15%',\n        ...this.getColumnSearchProps('company'),\n      },\n      {\n        title: 'Location',\n        dataIndex: 'location',\n        key: 'location',\n        width: '15%',\n        ...this.getColumnSearchProps('location'),\n      },\n      {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n        ...this.getColumnSearchProps('description'),\n        ellipsis: {\n          rows: 3,\n          expandable: true,\n          showTitle: false,\n        },\n        render: description => (\n          <Tooltip placement=\"left\" color={'#fff'} title={description.split('\\n').map(item => <li key={Math.random()}>{item}</li>)} >\n            {description}\n          </Tooltip>\n        ),\n      },\n      \n    ]\n  }\n  \n  getIndeedData = () => {\n    this.setState({isLoading: true})\n    getIndeedJobs()\n      .then(res => {\n        // prevent setState on unmounted component\n        if (!this.updater.isMounted(this)) return \n\n        res = JSON.parse(res)\n        res = this.filterData(this.state.searchword, res)\n        \n        this.countSkills(skills, res.map(item => item.description))\n        this.setState({\n          indeedData: res.map(item => {\n            return {\n              ...item,\n              key: Math.random()\n            }\n          }),\n          indeedColumns: this.getIndeedTableColumns()\n        })\n      })\n      .then(() => {\n        this.drawSkillChart()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        if (!this.updater.isMounted(this)) return \n        this.setState({isLoading: false})\n      })\n  }\n\n  onSearch = value => {\n    this.setState({\n      searchword: value\n    })\n    this.getIndeedData()\n  };\n\n  filterData = (keyword, data) => {\n    if (keyword === '') {\n      return data\n    } else {\n      const word = keyword.toLowerCase()\n      return data.filter(function (item) {\n        return item.description.toLowerCase().includes(word) || item.title.toLowerCase().includes(word)\n      })\n    }\n  }\n \n  countSkills = (skills, data) => {\n    var counts = {}\n    data.forEach(item => {\n      // loop through each keyword in skill object \n      for (const [key, value] of Object.entries(skills)) {\n        for (var i = 0; i < value.length; i++) {\n          // search for keywords\n          if (item.includes(value[i])) {\n            counts[key] = counts[key] ? counts[key] + 1 : 1;\n            break\n          }\n        }\n      }\n    })\n    // sort skill counts\n    var sortedCount = []\n    for (const [key, value] of Object.entries(counts)) {\n      sortedCount.push([key, value])\n    }\n    sortedCount =sortedCount.sort((a, b) => a[1] - b[1])\n\n    this.setState({\n      skillCount: sortedCount\n    })\n    return sortedCount\n  }\n\n  drawSkillChart = () => {\n    var chartData = this.state.skillCount\n    // display top 20 skills \n    chartData = chartData.slice(chartData.length-20,chartData.length)\n    chartData.unshift(['skill', 'count'])\n    this.ChartOption = {\n      ...chartOption,\n      dataset: {source: chartData}\n    }\n    this.chart.setOption(this.ChartOption)\n    this.getCourseraData()\n  }\n\n  getCourseraData = () => {\n    this.setState({isLoading: true})\n    getCourseraCourses()\n      .then(res => {\n        // prevent setState on unmounted component\n        if (!this.updater.isMounted(this)) return \n        res = JSON.parse(res)\n        const courses = this.matchSkills(res)\n        console.log(courses)\n        this.setState({\n          courseraData: courses.map(item => {\n            return {\n              ...item,\n              key: Math.random()\n            }}),\n          courseraColumns: this.getCourseraTableColumns()\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        if (!this.updater.isMounted(this)) return \n        this.setState({isLoading: false})\n      })\n\n  }\n\n  getCourseraTableColumns = () => {\n    return [\n      {\n        dataIndex: 'photo',\n        key: 'photo',\n        render: (text, record) => (\n          <img width='100'src={record.photo}></img>\n        )\n      },\n      {\n        title: 'Course',\n        dataIndex: 'name',\n        key: 'course',\n        render: (text, record) => (\n          <a href={record.link}>{text}</a>\n        )\n      },\n      {\n        title: 'Offer By',\n        dataIndex: 'offerBy',\n        key: 'offerBy',\n      },\n      {\n        title: 'Difficulty',\n        dataIndex: 'difficulty',\n        key: 'difficulty',\n      }, \n      {\n        title: 'Matched SKill',\n        dataIndex: 'matchedSkill',\n        key: 'matchedSkill',\n      }, \n    ]\n  }\n\n  matchSkills = (data) => {\n    const skills = this.state.skillCount\n    const topSkills = skills.slice(skills.length-20,skills.length)\n    const result = []\n    // find best matched courses to topSkills\n    topSkills.forEach(skill => {\n      skill = skill[0].toLowerCase()\n      var courses = data.filter((course) => \n        course.name.toLowerCase().includes(skill) //&& course.difficulty.toLowerCase().includes('intermediate')\n      )\n      courses = courses.sort((a, b) => a.reviews - b.reviews)\n      console.log(courses)\n      // filter duplicated courses\n      for (var i = 0; i < courses.length; i++) {\n        if (courses[i] && !result.includes(courses[i])) {\n          result.push({...courses[i], matchedSkill: skill})\n          break\n        }\n      }\n    })\n    return result.reverse()\n    // return result.sort((a, b) => b.reviews - a.reviews)\n  }\n\n\n  componentDidMount() {\n    this.chart = echarts.init(document.getElementById('chart'))\n    this.getIndeedData()\n  }\n\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" gutter={16}>\n        <Col className=\"gutter-row\" {...gridSpan}>\n          <Card bordered={false} title='Indeed Data Scientist Postings' >\n            <Search\n              placeholder=\"Filter by keywords\"\n              allowClear\n              enterButton=\"Search\"\n              size=\"large\"\n              onSearch={this.onSearch}\n            />\n          </Card>\n          \n          <Card bordered={false} >\n          <Table \n            loading={this.state.isLoading}\n            columns={this.state.indeedColumns} \n            dataSource={this.state.indeedData} \n            // size='small'\n            // scroll={{ y: 400 }}\n            pagination={{\n              pageSize: 20,\n              onChange: this.onPageChange,\n              hideOnSinglePage: true,\n              // total: this.state.total,\n              showQuickJumper: true,\n              showSizeChanger: false\n            }}\n          />\n        </Card> \n\n        </Col>\n        <Col className=\"gutter-row\" {...gridSpan} >\n            <Card title=\"Most Desired Skills from Indeed\" bordered={false} >\n            <div id='chart' style={{height: '400px', width: '100%', margin: '0', padding: 0}}></div>\n            </Card>\n\n\n            <Card title=\"Coursera Course Recommendation\" bordered={false} style={{marginTop: '16px'}}>\n              <Table \n              loading={this.state.isLoading}\n              columns={this.state.courseraColumns} \n              dataSource={this.state.courseraData} \n              size='small'\n              // scroll={{ y: 400 }}\n              pagination={false}\n            />\n            </Card>\n        </Col>\n      </Row>\n\n      </div>\n      \n    )\n  }\n}\n"],"sourceRoot":""}