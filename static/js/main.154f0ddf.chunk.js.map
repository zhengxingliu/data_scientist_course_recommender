{"version":3,"sources":["components/Navbar/index.js","requests/index.js","components/Dashboard/settings.js","components/Dashboard/index.js","App.js","index.js"],"names":["Header","Content","SideNav","Text","className","href","style","padding","margin","this","props","children","Component","request","axios","create","baseURL","headers","interceptors","response","use","resp","parseInt","status","data","message","error","gridSpan","xs","lg","chartOption","dataset","source","grid","left","right","top","bottom","containLabel","xAxis","type","yAxis","tooltip","trigger","axisPointer","series","encode","x","y","itemStyle","color","echarts","graphic","LinearGradient","offset","emphasis","skills","learningCurve","Search","Dashboard","getIndeedTableColumns","title","dataIndex","key","width","getColumnSearchProps","render","text","record","link","ellipsis","rows","expandable","showTitle","description","placement","split","map","item","Math","random","getIndeedData","setState","isLoading","post","then","res","updater","isMounted","JSON","parse","filterData","state","searchword","countSkills","indeedData","indeedColumns","drawSkillChart","catch","err","console","log","finally","onSearch","value","courseSortMethod","keyword","word","toLowerCase","filter","includes","counts","forEach","Object","entries","i","length","sortedCount","push","sort","a","b","skillCount","chartData","slice","unshift","ChartOption","chart","setOption","getCourseraData","courses","matchSkills","courseraData","courseraColumns","getCourseraTableColumns","src","photo","topSkills","result","skill","course","name","some","matchedSkill","reverse","indexOf","handleCourseSortMethod","e","target","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","placeholder","onChange","onPressEnter","handleSearch","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","undefined","onFilter","toString","onFilterDropdownVisibleChange","visible","setTimeout","select","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","columns","init","document","getElementById","gutter","bordered","allowClear","enterButton","loading","dataSource","pagination","pageSize","onPageChange","hideOnSinglePage","showQuickJumper","showSizeChanger","id","height","marginTop","App","Navbar","ReactDOM","basename","process"],"mappings":"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","file":"static/js/main.154f0ddf.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Layout, Typography} from \"antd\"\n\nimport \"./navbar.less\"\n\n\nconst { Header, Content } = Layout\n\nconst { Text } = Typography;\nclass SideNav extends Component {\n \n  render() {\n    return (\n      <Layout className='main-layout'>\n        <Header className=\"header main-header\">\n          <div className=\"logo main-logo\">\n            <a href='/'>\n              <h1>  Data Scientist Course Recommender</h1>\n            </a>\n          </div>\n          <div>\n          </div>\n        </Header>\n        <Layout>\n          <Layout className='content-layout' style={{ padding: \"24px\"}}>\n            <Content\n              className=\"site-layout-background\"\n              style={{margin: 0}}\n            >\n              <div className=\"content\" >\n                {this.props.children} \n              </div>\n         \n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default SideNav\n","import axios from 'axios'\nimport { message } from 'antd'\n\n// const isDev = process.env.NODE_ENV === 'development'\nconst isDev = false\n\nconst request = axios.create({\n  baseURL: isDev? 'http://localhost:8080' : 'https://ds-course-recommender.herokuapp.com',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\nrequest.interceptors.response.use((resp) => {\n  if (parseInt(resp.status) === 200) {\n    return resp.data\n  } else {\n    // handle error globally \n    // message.error(resp.data.errMsg);\n    message.error('An error occurred.')\n  }\n})\n\nexport const getIndeedJobs = () => {\n  return request.post('/fetch-indeed')\n}\n\nexport const getCourseraCourses = () => {\n  return request.post('/fetch-coursera')\n}\n\n\n","import echarts from 'echarts'\n\nexport const gridSpan = {\n  xs: 24,\n  lg: 12,\n}\n\nexport const chartOption = {\n  dataset: {\n      source: [\n      ]\n  },\n  grid: {\n    left: '3%',\n    right: '3%',\n    top: '0%',\n    bottom: '0%',\n    containLabel: true\n},\n  xAxis: {type: 'value'},\n  yAxis: {type: 'category'},\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n        type: 'shadow'}\n  },\n  \n  series: [\n      {\n          type: 'bar',\n          encode: {\n              x: 'count',\n              y: 'skill'\n          },\n          itemStyle: {\n              color: new echarts.graphic.LinearGradient(\n                  0, 1, 1, 1,\n                  [\n                    {offset: 0, color: '#B3E5FC'},\n                    {offset: 1, color: '#82B1FF'}\n                  ]\n              )\n          },\n          emphasis: {\n              itemStyle: {\n                  color: new echarts.graphic.LinearGradient(\n                      0, 0, 1, 1,\n                      [\n                          {offset: 0, color: '#2378f7'},\n                          {offset: 0.7, color: '#2378f7'},\n                          {offset: 1, color: '#83bff6'}\n                      ]\n                  )\n              }\n          },\n      }\n  ]\n};\n\nexport const skills = {\n  'Python': ['python', 'programming', 'scripting'],\n  ' R ': [' R ' ], \n  'Java': ['Java', 'JVM'],\n  'Scala': ['Scala'],\n  'C/C++': ['C++'],  \n  'MATLAB': ['MATLAB'],\n  'Excel': ['Excel', 'VBA'],\n  'SAS': ['SAS'],\n  'SQL': ['SQL'],\n  'Oracle':['Oracle'],\n  'SPSS': ['SPSS'],\n  'Machine Learning': ['Machine Learning', 'ML', 'Deep Learning','Neural Network', 'Neural Networks', 'Artificial Intelligence', 'AI', 'ANN', 'MLP', 'CNN', 'LSTM', 'DNN'],\n  'Data Science': ['Data Science'],\n  'Data Mining': ['Data Mining'],\n  'NLP': ['Natural Language Processing', 'NLP'],\n  'Tableau': ['Tableau'], \n  'Power BI': ['Power BI'],\n  'Big Data': ['Big Data', 'Spark', 'kafka', 'Hive','beam', 'Hadoop', 'MapReduce', 'Hbase',\n                'Coudera', 'Hortonworks', 'ETL'],\n  'cloud': ['cloud', 'AWS', 'GCP', 'Azure', 'cloud computing'],\n  'AWS': ['AWS', 'Amazon Web Services'],\n  'Azure': ['Azure'],\n  'GCP': ['Google Cloud', 'GCP'],\n  'Probability': ['probablity'],\n  'regression': ['regression'],\n  'clustering': ['clustering'],\n  'Sklearn': ['Sklearn', 'ScikitLearn', 'Scikit-Learn'],\n  'numpy': ['numpy'],\n  'pandas': ['pandas'],\n  'Tensorflow': ['Tensorflow', 'Keras'],\n  'Pytorch': ['Pytorch'],\n  'Computer Vision': ['computer vision', 'opencv'],\n  'Hadoop': ['Hadoop'],\n  'Spark': ['Spark'],\n  'ETL': ['ETL'],\n  'Statistics' :  ['Statistic', 'statistical'],\n  'DevOps': ['DevOps', 'automation', 'QA'],\n  'Git':['GitHub', 'Git', 'version control', 'CI/CD'],\n  'Linux': ['Linux', 'Unix'],\n  'agile' : ['agile'],\n  'SDLC' : ['SDLC', 'sdlc', ]\n}\n\nexport const learningCurve = ['python', 'data science', 'statistics', 'machine learning', 'sql','big data', 'cloud', 'aws', 'gcp', 'excel', 'tableau', 'tensorflow']\n\nexport const categories = {\n  'Programming Languages': ['Python', 'R', 'Java', 'C/C++', 'MATLAB', 'Scala'],\n  'Databases': ['SQL', 'Oracle'],\n  'Machine Learning': ['Machine Learning', 'NLP', 'regression', 'clustering', 'Sklearn', 'numpy', 'pandas'],\n  'Deep Learning': ['Tensorflow', 'Pytorch', 'Keras', 'Computer Vision'],\n  'Big Data': ['Big Data'],\n  'Data Analytics & Visualization': ['Data Visualization', 'Tableau', 'Power BI', 'Data Mining/Analytics', 'Excel'],\n  'Cloud': ['cloud', 'AWS', 'Azure', 'GCP'],\n  'Others': ['Algebra', 'Mathematics','Statistics', 'DevOps', 'QA', 'version control', 'agile', 'SDLC','SAS', 'SPSS', 'Probability']\n}\n","import React, { Component } from 'react'\nimport { Card, Button, Table, Row, Col, Input, Space, Tooltip, Radio} from 'antd'\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport echarts from 'echarts'\n\nimport './index.css';\nimport { getIndeedJobs, getCourseraCourses } from '../../requests'\nimport {chartOption, gridSpan, skills,learningCurve} from './settings'\n\nconst { Search } = Input\n\nexport default class Dashboard extends Component {\n  constructor() {\n    super()\n    this.state = {\n      data: [],\n      columns: [],\n      isLoading: false,\n      searchword: '',\n      searchText: '',\n      searchedColumn: '',\n      courseSortMethod: 'skill_demand'\n\n    }\n  }\n\n  componentDidMount() {\n    this.chart = echarts.init(document.getElementById('chart'))\n    this.getIndeedData()\n  }\n  \n  getIndeedTableColumns = () => {\n    return [\n      {\n        title: 'Title',\n        dataIndex: 'title',\n        key: 'title',\n        width: '20%',\n        ...this.getColumnSearchProps('title'),\n\n        render: (text, record) => (\n          <a href={record.link}>{text}</a>\n        )\n      },\n      {\n        title: 'Company',\n        dataIndex: 'company',\n        key: 'company',\n        width: '15%',\n        ...this.getColumnSearchProps('company'),\n      },\n      {\n        title: 'Location',\n        dataIndex: 'location',\n        key: 'location',\n        width: '15%',\n        ...this.getColumnSearchProps('location'),\n      },\n      {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n        ...this.getColumnSearchProps('description'),\n        ellipsis: {\n          rows: 3,\n          expandable: true,\n          showTitle: false,\n        },\n        render: description => (\n          <Tooltip placement=\"left\" color={'#fff'} title={description.split('\\n').map(item => <li key={Math.random()}>{item}</li>)} >\n            {description}\n          </Tooltip>\n        ),\n      },\n      \n    ]\n  }\n  \n  getIndeedData = () => {\n    this.setState({isLoading: true})\n    getIndeedJobs()\n      .then(res => {\n        // prevent setState on unmounted component\n        if (!this.updater.isMounted(this)) return \n\n        res = JSON.parse(res)\n        res = this.filterData(this.state.searchword, res)\n        \n        this.countSkills(skills, res.map(item => item.description))\n        this.setState({\n          indeedData: res.map(item => {\n            return {\n              ...item,\n              key: Math.random()\n            }\n          }),\n          indeedColumns: this.getIndeedTableColumns()\n        })\n      })\n      .then(() => {\n        this.drawSkillChart()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        if (!this.updater.isMounted(this)) return \n        this.setState({isLoading: false})\n      })\n  }\n\n  onSearch = value => {\n    this.setState({\n      searchword: value,\n      courseSortMethod: 'skill_demand'\n    })\n\n    this.getIndeedData()\n  };\n\n  filterData = (keyword, data) => {\n    if (keyword === '') {\n      return data\n    } else {\n      const word = keyword.toLowerCase()\n      return data.filter(function (item) {\n        return item.description.toLowerCase().includes(word) || item.title.toLowerCase().includes(word)\n      })\n    }\n  }\n \n  countSkills = (skills, data) => {\n    var counts = {}\n    data.forEach(item => {\n      // loop through each keyword in skill object \n      for (const [key, value] of Object.entries(skills)) {\n        for (var i = 0; i < value.length; i++) {\n          // search for keywords\n          if (item.includes(value[i])) {\n            counts[key] = counts[key] ? counts[key] + 1 : 1;\n            break\n          }\n        }\n      }\n    })\n    // sort skill counts\n    var sortedCount = []\n    for (const [key, value] of Object.entries(counts)) {\n      sortedCount.push([key, value])\n    }\n    sortedCount =sortedCount.sort((a, b) => a[1] - b[1])\n\n    this.setState({\n      skillCount: sortedCount\n    })\n    return sortedCount\n  }\n\n  drawSkillChart = () => {\n    var chartData = this.state.skillCount\n    // display top 20 skills \n    chartData = chartData.slice(chartData.length-20,chartData.length)\n    chartData.unshift(['skill', 'count'])\n    this.ChartOption = {\n      ...chartOption,\n      dataset: {source: chartData}\n    }\n    this.chart.setOption(this.ChartOption)\n    this.getCourseraData()\n  }\n\n  getCourseraData = () => {\n    this.setState({isLoading: true})\n    getCourseraCourses()\n      .then(res => {\n        // prevent setState on unmounted component\n        if (!this.updater.isMounted(this)) return \n        res = JSON.parse(res)\n        const courses = this.matchSkills(res)\n        // console.log(courses)\n        this.setState({\n          courseraData: courses.map(item => {\n            return {\n              ...item,\n              key: Math.random()\n            }}),\n          courseraColumns: this.getCourseraTableColumns()\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        if (!this.updater.isMounted(this)) return \n        this.setState({isLoading: false})\n      })\n\n  }\n\n  getCourseraTableColumns = () => {\n    return [\n      {\n        dataIndex: 'photo',\n        key: 'photo',\n        render: (text, record) => (\n          <img width='100'src={record.photo}></img>\n        )\n      },\n      {\n        title: 'Course',\n        dataIndex: 'name',\n        key: 'course',\n        render: (text, record) => (\n          <a href={record.link}>{text}</a>\n        )\n      },\n      {\n        title: 'Offer By',\n        dataIndex: 'offerBy',\n        key: 'offerBy',\n      },\n      {\n        title: 'Difficulty',\n        dataIndex: 'difficulty',\n        key: 'difficulty',\n      }, \n      {\n        title: 'Matched SKill',\n        dataIndex: 'matchedSkill',\n        key: 'matchedSkill',\n      }, \n    ]\n  }\n\n  matchSkills = (data) => {\n    const skills = this.state.skillCount\n    const topSkills = skills.slice(skills.length-20,skills.length)\n    var result = []\n    // find best matched courses to topSkills\n    topSkills.forEach(skill => {\n      skill = skill[0].toLowerCase()\n      console.log(skill)\n      var courses = data.filter((course) => \n        course.name.toLowerCase().includes(skill) \n        // && course.difficulty.toLowerCase().includes('intermediate')\n        // || course.skills.toLowerCase().includes(skill) \n      )\n    //  // sort courses by rating\n    //   courses = courses.sort(function(a,b) {\n    //     return a.review - b.reviews\n    // })\n\n      // filter duplicated courses\n      for (var i = 0; i < courses.length; i++) {\n        if (courses[i] && !result.some(course => course.name === courses[i].name)) {\n          result.push({...courses[i], matchedSkill: skill})\n          break\n        }\n      }\n    })\n    result = result.reverse()\n\n    // handle display order, default at sort by skill demand \n    if (this.state.courseSortMethod === 'learning_curve') {\n      // sort courses on learning curve\n      result = result.sort(function(a,b) {\n        return learningCurve.indexOf( a.matchedSkill ) - learningCurve.indexOf( b.matchedSkill );\n      })\n    }\n\n    return result\n  }\n\n  // handle button click on coursera table display order \n  handleCourseSortMethod = e => {\n    this.setState({ courseSortMethod: e.target.value });\n    this.getCourseraData()\n  }\n\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" gutter={16}>\n        <Col className=\"gutter-row\" {...gridSpan}>\n          <Card bordered={false} title='Indeed Data Scientist Postings' >\n            <Search\n              placeholder=\"Filter by keywords\"\n              allowClear\n              enterButton=\"Search\"\n              size=\"large\"\n              onSearch={this.onSearch}\n            />\n          </Card>\n          \n          <Card bordered={false} >\n          <Table \n            loading={this.state.isLoading}\n            columns={this.state.indeedColumns} \n            dataSource={this.state.indeedData} \n            // size='small'\n            // scroll={{ y: 400 }}\n            pagination={{\n              pageSize: 20,\n              onChange: this.onPageChange,\n              hideOnSinglePage: true,\n              // total: this.state.total,\n              showQuickJumper: true,\n              showSizeChanger: false\n            }}\n          />\n        </Card> \n\n        </Col>\n        <Col className=\"gutter-row\" {...gridSpan} >\n            <Card title=\"Most Desired Skills from Indeed\" bordered={false} >\n            <div id='chart' style={{height: '400px', width: '100%', margin: '0', padding: 0}}></div>\n            </Card>\n\n\n            <Card title=\"Coursera Course Recommendation\" \n              // extra={\n              //   <div>\n              //     <span>order by: </span>\n              //     <Radio.Group value={this.state.courseSortMethod} onChange={this.handleCourseSortMethod}>\n              //       <Radio.Button value=\"skill_demand\">skill demand</Radio.Button>\n              //       <Radio.Button value=\"learning_curve\">learning curve</Radio.Button>\n              //     </Radio.Group>\n              //   </div>\n              // } \n              bordered={false} style={{marginTop: '16px'}}>\n              <Table \n              loading={this.state.isLoading}\n              columns={this.state.courseraColumns} \n              dataSource={this.state.courseraData} \n              size='small'\n              // scroll={{ y: 400 }}\n              pagination={false}\n            />\n            </Card>\n        </Col>\n      </Row>\n\n      </div>\n      \n    )\n  }\n}\n","import React from \"react\"\n\nimport { Navbar, Dashboard } from \"./components\"\n\nfunction App() {\n  return (\n    <Navbar>\n       <Dashboard/>\n    </Navbar>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n  {/* <Router> */}\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}