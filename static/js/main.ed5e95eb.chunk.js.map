{"version":3,"sources":["components/Navbar/index.js","components/Loading/index.js","components/ItemCard/index.js","components/Chart/index.js","views/index.js","routes/index.js","App.js","index.js"],"names":["Header","Content","SideNav","Sider","Text","withRouter","routes","className","href","style","padding","margin","height","this","props","children","Component","Loading","antIcon","LoadingOutlined","fontSize","spin","indicator","Meta","ItemCard","width","cover","alt","src","actions","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","title","description","Menu","loadable","pMinDelay","fallback","Setting","Dashboard","pathname","component","icon","ProfileOutlined","DashboardOutlined","App","map","route","path","exact","render","routerProps","ReactDOM","document","getElementById"],"mappings":"yVAUQA,E,IAAAA,OAAQC,E,IAAAA,QA+DDC,G,IA/DUC,M,IAEjBC,KACPC,Y,yKAKiBC,IACd,OACE,oBAAQC,UAAU,cAAlB,UACE,eAACP,EAAD,CAAQO,UAAU,qBAAlB,UACE,qBAAKA,UAAU,iBAAf,SACE,mBAAGC,KAAK,IAAR,SACE,yEAGJ,2BAIF,4BAmBE,mBAAQD,UAAU,iBAAiBE,MAAO,CAAEC,QAAS,QAArD,SACE,cAACT,EAAD,CACEM,UAAU,yBACVE,MAAO,CACLE,OAAQ,GAHZ,SAQE,qBAAKJ,UAAU,UAAUE,MAAO,CAACG,OAAQ,QAAzC,SACGC,KAAKC,MAAMC,wB,GA9CNC,e,8BCVDC,E,4MAEnBC,QAAU,cAACC,EAAA,EAAD,CAAiBV,MAAO,CAAEW,SAAU,IAAMC,MAAI,I,uDAGtD,OACE,mBAAMC,UAAWT,KAAKK,c,GANSF,a,+DCA7BO,E,IAAAA,KAEcC,E,uKAGlB,OACJ,mBACMf,MAAO,CAAEgB,MAAO,KAChBC,MACE,qBACEC,IAAI,UACJC,IAAI,wEAGRC,QAAS,CACP,cAACC,EAAA,EAAD,GAAqB,WACrB,cAACC,EAAA,EAAD,GAAkB,QAClB,cAACC,EAAA,EAAD,GAAsB,aAX9B,SAcM,cAACT,EAAD,CACEU,OAAQ,mBAAQL,IAAI,qEACpBM,MAAM,aACNC,YAAY,kC,GArBmBnB,a,kBCHJA,a,qJCI7BoB,EAAOC,aAAS,kBACpBC,IACE,2DAAkB,CAACC,SAAW,cAAC,IAAD,KAC9B,QAGEC,EAAUH,aAAS,kBACvBC,IACE,8BAAqB,CAACC,SAAW,cAAC,IAAD,KACjC,QAIEE,EAAYJ,aAAS,kBACzBC,IACE,2DAAuB,CAACC,SAAW,cAAC,IAAD,KACnC,QClBSjC,EAAU,CACrB,CACEoC,SAAU,QACVR,MAAO,OACPS,UAAWP,EACXQ,KAAMC,KACL,CACDH,SAAU,aACVR,MAAO,YACPS,UAAWF,EACXG,KAAME,KACL,CACDJ,SAAU,WACVR,MAAO,UACPS,UAAWH,EACXI,KAAMd,O,4MCWKiB,MAvBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UAEIzC,IAAO0C,KAAI,SAAAC,GACT,OACE,cAAC,IAAD,CAEEC,KAAMD,EAAMP,SACZS,OAAO,EACPC,OAAQ,SAAAC,GACN,OAAO,cAACJ,EAAMN,UAAP,eAAqBU,MAJzBJ,EAAMP,kBCR3BY,IAASF,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFG,SAASC,eAAe,W","file":"static/js/main.ed5e95eb.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Layout, Menu, Dropdown, Avatar, Badge, Typography } from \"antd\"\n\n\n\nimport \"./navbar.less\"\n\nimport { routes } from \"../../routes\"\n\nconst { Header, Content, Sider } = Layout\n\nconst { Text } = Typography;\n@withRouter\nclass SideNav extends Component {\n \n  render() {\n     \n    const menus = routes\n    return (\n      <Layout className='main-layout'>\n        <Header className=\"header main-header\">\n          <div className=\"logo main-logo\">\n            <a href='/'>\n              <h1>  Data Scientist Course Recommender</h1>\n            </a>\n          </div>\n          <div>\n          </div>\n\n        </Header>\n        <Layout>\n          {/* <Sider breakpoint=\"lg\" collapsedWidth=\"0\" style={{zIndex: 100, height: \"100vh\"}} >\n            <Menu \n              onClick={this.menuClicked}\n              mode=\"inline\"\n              defaultSelectedKeys={menus[0].pathname}\n              selectedKeys={this.props.location.pathname}\n              defaultOpenKeys={menus[0].pathname}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              {menus.map((menu) => {\n                return (\n                  <Menu.Item key={menu.pathname} icon={<menu.icon />}>\n                    <Link to={menu.pathname}> {menu.title}</Link>\n                  </Menu.Item>\n                )\n              })}\n            </Menu>\n          </Sider> */}\n          <Layout className='content-layout' style={{ padding: \"24px\"}}>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: 0,\n                // backgroundColor: \"#FFF\"\n              }}\n            >\n\n              <div className=\"content\" style={{height: '100%'}}>\n                {this.props.children} \n              </div>\n         \n            </Content>\n            \n                         \n          </Layout>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default SideNav\n","import React, { Component } from 'react'\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default class Loading extends Component {\n\n  antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  render() {\n    return (\n      <Spin indicator={this.antIcon} />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, Avatar } from 'antd'\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst { Meta } = Card;\n\nexport default  class ItemCard extends Component {\n  \n  render() {\n    return (\n<Card\n      style={{ width: 300 }}\n      cover={\n        <img\n          alt=\"example\"\n          src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n        />\n      }\n      actions={[\n        <SettingOutlined key=\"setting\" />,\n        <EditOutlined key=\"edit\" />,\n        <EllipsisOutlined key=\"ellipsis\" />,\n      ]}\n    >\n      <Meta\n        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n        title=\"Card title\"\n        description=\"This is the description\"\n      />\n    </Card>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport echarts from 'echarts'\n\nexport default class Chart extends Component {\n\n  componentDidMount() {\n    this.chart = echarts.init(document.getElementById('chart'))\n    this.chart.setOption(this.props.chartOptions)\n  }\n  render() {\n    return (\n      <div id='chart' style={{height: '300px', flex: 'auto', width: '100%'}}></div>\n    )\n  }\n}","import React from \"react\"\nimport loadable from '@loadable/component'\nimport pMinDelay from 'p-min-delay'\n\nimport { Loading } from '../components'\n\n\nconst Menu = loadable(() => \n  pMinDelay(\n    import('./Menu'), {fallback:  <Loading/>},\n    200\n))\n\nconst Setting = loadable(() => \n  pMinDelay(\n    import('./Setting'), {fallback:  <Loading/>},\n    200\n))\n\n\nconst Dashboard = loadable(() => \n  pMinDelay(\n    import('./Dashboard'), {fallback:  <Loading/>},\n    200\n))\n\nexport {\n  Menu,\n  Setting,\n  Dashboard\n}","import { ContainerOutlined, WalletOutlined, ProfileOutlined, DashboardOutlined, FileTextOutlined, SettingOutlined} from \"@ant-design/icons\"\n\nimport { Menu, Setting, Dashboard } from '../views'\n\n\nexport const routes =  [\n  {\n    pathname: '/menu',\n    title: 'Menu',\n    component: Menu,\n    icon: ProfileOutlined\n  }, {\n    pathname: '/dashboard',\n    title: 'Dashboard',\n    component: Dashboard,\n    icon: DashboardOutlined\n  }, {\n    pathname: '/setting',\n    title: 'Setting',\n    component: Setting,\n    icon: SettingOutlined\n  }, \n]","import React from \"react\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\n\n\nimport \"./App.css\"\nimport { Navbar } from \"./components\"\nimport { routes } from './routes'\n\nfunction App() {\n  return (\n    <Navbar>\n      <Switch>\n        {\n          routes.map(route => {\n            return (\n              <Route \n                key={route.pathname}\n                path={route.pathname}\n                exact={true}\n                render={routerProps => {\n                  return <route.component {...routerProps}/>\n                }}\n              />\n            )\n          })\n        }\n      </Switch>\n    </Navbar>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}